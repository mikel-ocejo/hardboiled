//
// Character sheet
//
@include unify-parent(".actor") {
	// Initial size is also the minimum one
	min-width: 672px;
	min-height: 765px;

	.window-content {
		// Background and background related padding
		background: url(images/background-top.png) top left/100% no-repeat,
			url(images/background-bottom.png) bottom left/100% no-repeat,
			url(images/background-bg.png) left/2.7% repeat-y,
			$c-paper;
		padding: 40px 5px 15px 20px;
		
		form {
			// Flex properties
			// It shows sheet-header, sheet-tabs and sheet-body, only the
			// last one will expand
			display: flex;
			flex-direction: column;
			flex-wrap: nowrap;
			justify-content: stretch;
	
			header.sheet-header {
				// How it is displayed in form flex. Header does not stretch
				flex: 0 0 auto;
				// Its own flex properties
				// It is devided in traits and char-attribs
				display: flex;
				flex-direction: column;
				flex-wrap: nowrap;
				justify-content: flex-start;
				align-items: stretch;
				// To allow rotated image to be shown completeley
				overflow: visible; 
				
				.traits {
					// This block is fixed size, too
					flex: 0 0 auto;
					// Its own flex properties. Picture and traits are shown in a row
					display: flex;
					flex-direction: row;
					flex-wrap: nowrap;
					justify-content: flex-start;
					align-items: flex-start;
					// Margin with atributes block
					margin-bottom: 10px;
			
					.profile-img {
						// Do not stretch and size is 100px
						flex: 0 0 100px;
						height: 100px;
						// Margin with trait fields
						margin: 0 5px 0 0;
						// How image is fit into the 100px square
						object-fit: cover;
						object-position: top;
						// and then rotated
						transform: rotate(-5deg);
						// Properties of the image box
						background-color: white;
						border: 5px solid $c-mustard;
						border-radius: 5px;
						box-shadow: 0 0 8px grey;
					}
					
					.trait-fields {
						// This is the block to be stretched
						flex: 1 1 auto;
						// This block will have three rows
						display: flex;
						flex-direction: column;
						flex-wrap: nowrap;
						justify-content: flex-start;
						align-items: stretch;
						// Properties of the text box
						border-width: 10px 1px;
						border-color: $c-mustard;
						border-style: solid;
						border-radius: 5px;
						box-shadow: 0 0 8px grey;
						padding: .1em .3em;
						background-color: white;
						// Font size for this block
						font-size: large;
						
						// Input fields size is set a bit smaller
						input {
							font-size: smaller;
						}

						// This is how every label/input pair is shown
						div {
							// Do stretch
							flex: 1 0 auto;
							// The pair is shown with a flexrow
							display: flex;
							flex-direction: row;
							flex-wrap: nowrap;
							justify-content: space-between;
							align-items: center;
							// A small vertical margin
							margin: 0.1em 0;
							
							// Make the input field to stretch
							label {
								flex: 0 0 auto;
							}
							
							input {
								flex: 0 1 auto;
							}
								
							input[data-dtype="Number"] {
								flex: 0 0 auto;
								width: 2.2em;
							}
						}
					}
				}
				
				.chars-attribs {
					// This block is fixed size, too
					flex: 0 0 auto;
					// It is made of two rows, characteristics and attributes
					display: flex;
					flex-direction: column;
					justify-content: flex-start;
					align-items: stretch;
					// Properties of the text box
					border-width: 10px 1px;
					border-color: darkred;
					border-style: solid;
					border-radius: 5px;
					box-shadow: 0 0 8px grey;
					padding: .1em .3em;
					background-color: white;
					
					.characteristics {
						flex: 0 0 auto;
						// This is a row with characteristic/value pairs
						display: flex;
						flex-direction: row;
						flex-wrap: nowrap;
						justify-content: space-between;
						align-items: center;
						// Font size of characteristics
						font-size: x-large;
						
						// Smaller font for input fields 
						input {
							flex: 0 0 auto;
							width: 1.5em;
							font-size: smaller;
						}
					}
					
					.attributes {
						flex: 0 0 auto;
						// This is a row with characteristic/value pairs
						display: flex;
						flex-direction: row;
						flex-wrap: nowrap;
						justify-content: space-between;
						align-items: center;
						// Font size of attributes
						font-size: large;
						
						// Smaller font for input fields 
						input {
							flex: 0 1 auto;
							width: 2em;
							font-size: smaller;
						}
					}
				}
			}
			
			// Skills tab
			.tab.skills {
				// This is the one to stretch
				flex: 1 0 auto;
				height: 0;
				// We'll have a row with skills and talents
				display: flex;
				flex-direction: row;
				flex-wrap: nowrap;
				justify-content: flex-start;
				align-items: stretch;
				
				ol.items-list {
					// Skills are shown in two columns (wrapped) 
					display: flex;
					flex-direction: column;
					flex-wrap: wrap;
					justify-content: flex-start;
					align-items: stretch;
					
					li.skillrow, li.talentrow {
						flex: 0 0 auto;
						// Every row is a row of label, values and controls
						display: flex;
						flex-direction: row;
						flex-wrap: nowrap;
						justify-content: flex-start;
						align-items: center;
				
						.item-name {
							flex: 1 0 auto;
						}
						
						.item-value input {
							flex: 0 1 auto;
							width: 2em;
						}
					}
					
					// Leave some space between columns
					li.skillrow + li.skillrow {
						margin: 0 5px;
					}
				}
				
				ol.items-list:first-of-type {
					// Skills take 70% space
					flex: 0 0 70%;
					// Border to separate Talents from Skills
					border-width: 0 2px 0 0;
					border-color: darkred;
					border-style: solid;
					padding: 0 2px 0 0;
				}
				
				ol.items-list:last-of-type {
					// Talents take 70% space
					flex: 0 0 30%;
					// Border to separate Talents from Skills
					padding: 0 0 0 6px;
				}
			}
		}
	}
}

//
// Item skill sheet
//
@include unify-parent(".item") {
	// Initial size is also the minimum one
	min-width: 520px;
	min-height: 480px;

	.window-content {
		// Background and background related padding
		background: url(images/background-top-plain.png) top left/100% no-repeat,
			url(images/background-bottom.png) bottom left/100% no-repeat,
			url(images/background-bg.png) left/2.7% repeat-y,
			$c-paper;
		padding: 12px 5px 12px 16px;
		
		form {
			// Flex properties
			// It shows sheet-header, sheet-tabs and sheet-body, only the
			// last one will expand
			display: flex;
			flex-direction: column;
			flex-wrap: nowrap;
			justify-content: stretch;
	
			header.sheet-header {
				// How it is displayed in form flex. Header does not stretch
				flex: 0 0 auto;
				// Its own flex properties
				// It has a picture and the item name
				display: flex;
				flex-direction: column;
				flex-wrap: nowrap;
				justify-content: flex-start;
				align-items: stretch;
				margin-bottom: 10px;
				
				.header-fields {
					// This field does not stretch
					flex: 0 0 auto;
					// It is shown as a row with the picture and the name
					display: flex;
					flex-direction: row;
					flex-wrap: nowrap;
					justify-content: flex-start;
					align-items: center;
					// Header box properties
					border-width: 10px 1px;
					border-color: $c-mustard;
					border-style: solid;
					border-radius: 5px;
					box-shadow: 0 0 8px grey;
					padding: 0 .3em;
					background-color: white;
					// Header font size
					font-size: xx-large;
				
					.profile-img {
						// Image is 55px size
						flex: 0 0 55px;
						height: 55px;
						width: 55px;
						// How item image is fit into the square
						object-fit: cover;
						object-position: top;
						// and its rotation
						transform: rotate(-5deg);
						// Picture box properties
						background-color: white;
						box-shadow: 0 0 8px grey;
						border: 5px solid $c-mustard;
						border-radius: 5px;
					}
					
					input[type="text"] {
						flex: 1 1 auto;
						margin: 0;
					}
				}
			}
	
			.sheet-body {
				// This block stretches
				flex: 1 0 auto;
				// Sheet body is organized in a column
				display: flex;
				flex-direction: column;
				flex-wrap: nowrap;
				justify-content: flex-start;
				align-items: stretch;
				
				div.editor {
					// This block stretches
					flex: 1 0 auto;
				}
			}
		}
	}
}

//
// Fonts for titles and labels
//
%label, label {
	font-family: hardboiled-title;
}

// Outlined labels
@mixin outlined($color: #000) {
	@extend label;
	text-shadow: -1px -1px 0 $color, 1px -1px 0 $color, -1px 1px 0 $color, 1px 1px 0 $color;
}

// Characteristics labels
label.char-label {
	@include outlined(#000);
	color: $c-mustard;
}
			
label.char-label.rollable:hover,
label.char-label.rollable:hover {
	color: darkred;
	text-shadow: 0 0 10px black;
}

